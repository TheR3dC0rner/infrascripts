---
- hosts: all
  become: true
  name: Setup Jumpbox

  roles:
    - osupdate

  tasks:

    - name: ensure packages exist
      ansible.builtin.apt:
        pkg:
          - git
          - golang-go
          - python3-pip
          - pipx
          - age
          - podman
          - apt-transport-https
        update_cache: yes
        state: latest

    - name: set home directory variable
      set_fact:
        home: "{{ lookup('env', 'HOME') }}"
      become: false

    - name: ensure directory exists
      ansible.builtin.file:
        path: "{{ home }}/.config/containers/"
        state: directory
      become: false
    
    - name: fix podman registry error
      ansible.builtin.lineinfile:
        path: "{{ home }}/.config/containers/registries.conf"
        state: present
        line: 'unqualified-search-registries = ["docker.io"]'
      become: false

    - name: install pipx packages
      community.general.pipx:
        name: "{{ item }}"
        state: latest
      loop:
        - podman-compose
        - ansible
      become: false

    - name: setup helm repo
      ansible.builtin.shell: |
        curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | sudo tee /usr/share/keyrings/helm.gpg > /dev/null
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
   
    - name: install helm
      ansible.builtin.apt:
        name: helm
        state: latest
        update_cache: yes

    - name: get latest cilium version
      ansible.builtin.uri:
        url: https://raw.githubusercontent.com/cilium/cilium-cli/main/stable.txt
        method: GET
        return_content: true
      register: cilium_version
    

    - name: untar cilium
      ansible.builtin.unarchive:
        src: "https://github.com/cilium/cilium-cli/releases/download/{{ cilium_version.content|trim }}/cilium-linux-amd64.tar.gz"
        dest: /usr/local/bin
        remote_src: yes

    - name: get latest kustomize
      ansible.builtin.get_url:
        url: "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh"
        dest: "/tmp/kustomize.sh"
        mode: '0755' # Set executable permissions

    - name: install kustomize
      ansible.builtin.command: 
        cmd: "/tmp/kustomize.sh"


    - name: move kustomize to correct location
      ansible.builtin.command:
        cmd: mv "{{ home }}/kustomize" /usr/local/bin/kustomize



    - name: delete kustomize.sh
      ansible.builtin.file:
        path: "/tmp/kustomize.sh"
        state: absent

    - name: install kubectl
      community.general.snap:
        name:
          - kubectl

    - name: get latest flux
      ansible.builtin.get_url:
        url: "https://fluxcd.io/install.sh"
        dest: "/tmp/flux.sh"
        mode: '0755' # Set executable permissions

    - name: install flux
      ansible.builtin.command: 
        cmd: "/tmp/flux.sh"
    
    - name: check sops for latest version
      ansible.builtin.uri:
        url: https://api.github.com/repos/getsops/sops/releases/latest
        method: GET
        return_content: yes
        status_code: 200
        body_format: json
      register: recent_result

    - name: test
      debug:
          msg: "{{ recent_result.json.tag_name }}"

    - name: get latest sops
      ansible.builtin.get_url:
        url: "https://github.com/getsops/sops/releases/download/{{ recent_result.json.tag_name|trim }}/sops-{{ recent_result.json.tag_name|trim }}.linux.amd64"
        dest: "/usr/local/bin/sops"
        mode: '0755' # Set executable permissions

    - name: get latest k0sctl
      ansible.builtin.shell: |
        go install github.com/k0sproject/k0sctl@latest
        cd ~/go/bin
        mv k0sctl /usr/local/bin
        k0sctl completion > /etc/bash_completion.d/k0sctl
        


